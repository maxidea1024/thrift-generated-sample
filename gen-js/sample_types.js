//
// Autogenerated by Thrift Compiler (0.13.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
if (typeof Int64 === 'undefined' && typeof require === 'function') {
  var Int64 = require('node-int64');
}

if (typeof MyService === 'undefined') {
  MyService = {};
}
if (typeof module !== 'undefined' && module.exports) {
  module.exports.MyService = MyService;
}
MyService.ServicePlatformType = {
  '0': 'Google',
  'Google': 0,
  '1': 'Apple',
  'Apple': 1,
  '2': 'Facebook',
  'Facebook': 2,
  '3': 'Twitter',
  'Twitter': 3,
  '4': 'OneStore',
  'OneStore': 4
};
MyService.LoginRequest = function (args) {
  this.id = 'guest';
  this.password = '';
  if (args) {
    if (args.id !== undefined && args.id !== null) {
      this.id = args.id;
    }
    if (args.password !== undefined && args.password !== null) {
      this.password = args.password;
    }
  }
};
MyService.LoginRequest.prototype = {};
MyService.LoginRequest.prototype.read = function (input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
        if (ftype == Thrift.Type.STRING) {
          this.id = input.readString().value;
        } else {
          input.skip(ftype);
        }
        break;
      case 2:
        if (ftype == Thrift.Type.STRING) {
          this.password = input.readString().value;
        } else {
          input.skip(ftype);
        }
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MyService.LoginRequest.prototype.write = function (output) {
  output.writeStructBegin('LoginRequest');
  if (this.id !== null && this.id !== undefined) {
    output.writeFieldBegin('id', Thrift.Type.STRING, 1);
    output.writeString(this.id);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 2);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MyService.LoginResponse = function (args) {
  this.session_key = '1234';
  this.newbee = false;
  if (args) {
    if (args.session_key !== undefined && args.session_key !== null) {
      this.session_key = args.session_key;
    }
    if (args.newbee !== undefined && args.newbee !== null) {
      this.newbee = args.newbee;
    }
  }
};
MyService.LoginResponse.prototype = {};
MyService.LoginResponse.prototype.read = function (input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
        if (ftype == Thrift.Type.STRING) {
          this.session_key = input.readString().value;
        } else {
          input.skip(ftype);
        }
        break;
      case 2:
        if (ftype == Thrift.Type.BOOL) {
          this.newbee = input.readBool().value;
        } else {
          input.skip(ftype);
        }
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MyService.LoginResponse.prototype.write = function (output) {
  output.writeStructBegin('LoginResponse');
  if (this.session_key !== null && this.session_key !== undefined) {
    output.writeFieldBegin('session_key', Thrift.Type.STRING, 1);
    output.writeString(this.session_key);
    output.writeFieldEnd();
  }
  if (this.newbee !== null && this.newbee !== undefined) {
    output.writeFieldBegin('newbee', Thrift.Type.BOOL, 2);
    output.writeBool(this.newbee);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MyService.LogoutRequest = function (args) {
};
MyService.LogoutRequest.prototype = {};
MyService.LogoutRequest.prototype.read = function (input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MyService.LogoutRequest.prototype.write = function (output) {
  output.writeStructBegin('LogoutRequest');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MyService.LogoutResponse = function (args) {
};
MyService.LogoutResponse.prototype = {};
MyService.LogoutResponse.prototype.read = function (input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MyService.LogoutResponse.prototype.write = function (output) {
  output.writeStructBegin('LogoutResponse');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MyService.MAX_PASSWORD_LEN = 13;
MyService.DEFAULT_API_SERVER_URL = 'https://server.url.com/api/v1/\nabc';
