--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'MyService_constants'

ServicePlatformType = {
  Google = 0,
  Apple = 1,
  Facebook = 2,
  Twitter = 3,
  OneStore = 4
}

LoginRequest = __TObject:new{
  id,
  password
}

function LoginRequest:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.id = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.password = iprot:readString()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function LoginRequest:write(oprot)
  oprot:writeStructBegin('LoginRequest')
  if self.id ~= nil then
    oprot:writeFieldBegin('id', TType.STRING, 1)
    oprot:writeString(self.id)
    oprot:writeFieldEnd()
  end
  if self.password ~= nil then
    oprot:writeFieldBegin('password', TType.STRING, 2)
    oprot:writeString(self.password)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

LoginResponse = __TObject:new{
  session_key,
  newbee
}

function LoginResponse:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.STRING then
        self.session_key = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.BOOL then
        self.newbee = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function LoginResponse:write(oprot)
  oprot:writeStructBegin('LoginResponse')
  if self.session_key ~= nil then
    oprot:writeFieldBegin('session_key', TType.STRING, 1)
    oprot:writeString(self.session_key)
    oprot:writeFieldEnd()
  end
  if self.newbee ~= nil then
    oprot:writeFieldBegin('newbee', TType.BOOL, 2)
    oprot:writeBool(self.newbee)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

LogoutRequest = __TObject:new{

}

function LogoutRequest:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function LogoutRequest:write(oprot)
  oprot:writeStructBegin('LogoutRequest')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end

LogoutResponse = __TObject:new{

}

function LogoutResponse:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function LogoutResponse:write(oprot)
  oprot:writeStructBegin('LogoutResponse')
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end